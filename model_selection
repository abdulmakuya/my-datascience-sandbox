```python

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=1)

#scores = cross_val_score(lr,all_X,all_y,cv=10)
scores = cross_val_score(knn, all_X, all_y, cv=10)
accuracy_knn = scores.mean()


# Hyperparameter Optimization

import matplotlib.pyplot as plt

def plot_dict(dictionary):
    pd.Series(dictionary).plot.bar(figsize=(9,6),
                                   ylim=(0.78,0.83),rot=0)
    plt.show()

knn_scores = dict()
for k in range(1,50,2):
    knn = KNeighborsClassifier(n_neighbors=k)

    scores = cross_val_score(knn, all_X, all_y, cv=10)
    accuracy_knn = scores.mean()
    knn_scores[k] = accuracy_knn

plot_dict(knn_scores)

#from there we just iterated the possible values of the parameters,but 
#within one model,and looked iin a graph which parameter gave the best value.
If we maintain a table,which gives the best score,btn lr,knn after iterating the parameters...
#Another term for saying all that is GridSearch,
